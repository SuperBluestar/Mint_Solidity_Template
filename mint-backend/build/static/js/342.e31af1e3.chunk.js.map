{"version":3,"file":"static/js/342.e31af1e3.chunk.js","mappings":"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M,IAAM,GAAM,EAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,EAAM,IAAM,GAAM,IAAM,GAAM,IAAM,EAAM,IAAM,EAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,EAAM,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,EAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAAM,EAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,EAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,EAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAC//CC,EAAI,CAAC,GAAM,EAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,EAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,EAAM,IAAM,IAAM,GAAM,EAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,EAAM,IAAM,IAAM,IAAM,EAAM,EAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,EAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KAG//CC,EAAK,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,EAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAC1/FC,EAAK,CAAC,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,EAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,SAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAC1/FC,EAAK,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,SAAY,WAAY,UAAY,WAAY,UAAY,WAAY,SAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,EAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAC1/FC,EAAK,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,SAAY,WAAY,UAAY,WAAY,UAAY,WAAY,SAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,EAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAG1/FC,EAAK,CAAC,WAAY,WAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,SAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,EAAY,UAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAC1/FC,EAAK,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,EAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,SAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,SAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAC1/FC,EAAK,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,SAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,EAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAC1/FC,EAAK,CAAC,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,SAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,WAAY,SAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,SAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,EAAY,WAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,YAG1/FC,EAAK,CAAC,EAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,SAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,SAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,UAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAC1/FC,EAAK,CAAC,EAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,SAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,SAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,SAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,SAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAC1/FC,EAAK,CAAC,EAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,UAAY,UAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,UAAY,UAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,UAAY,UAAY,WAAY,UAAY,UAAY,UAAY,UAAY,SAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAC1/FC,EAAK,CAAC,EAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,UAAY,UAAY,UAAY,UAAY,SAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,UAAY,UAAY,SAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,UAAY,UAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY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","sources":["../node_modules/@ethersproject/hash/lib.esm/message.js","../node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js","../node_modules/@ethersproject/wordlists/lib.esm/wordlist.js","../node_modules/@ethersproject/wordlists/lib.esm/_version.js","../node_modules/@ethersproject/wordlists/lib.esm/lang-en.js","../node_modules/@ethersproject/wordlists/lib.esm/wordlists.js","../node_modules/@ethersproject/hdnode/lib.esm/index.js","../node_modules/@ethersproject/hdnode/lib.esm/_version.js","../node_modules/@ethersproject/random/lib.esm/_version.js","../node_modules/@ethersproject/random/lib.esm/random.js","../node_modules/@ethersproject/json-wallets/lib.esm/_version.js","../node_modules/@ethersproject/json-wallets/lib.esm/utils.js","../node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js","../node_modules/@ethersproject/json-wallets/lib.esm/inspect.js","../node_modules/@ethersproject/json-wallets/lib.esm/keystore.js","../node_modules/@ethersproject/json-wallets/lib.esm/index.js","../node_modules/@ethersproject/wallet/lib.esm/_version.js","../node_modules/@ethersproject/wallet/lib.esm/index.js","../node_modules/@ethersproject/experimental/lib.esm/_version.js","../node_modules/@ethersproject/experimental/lib.esm/brain-wallet.js","../node_modules/@ethersproject/experimental/lib.esm/nonce-manager.js","../node_modules/@ethersproject/experimental/lib.esm/eip1193-bridge.js","../node_modules/aes-js/index.js","../node_modules/events/events.js","../node_modules/scrypt-js/scrypt.js"],"sourcesContent":["import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac } from \"@ethersproject/sha2\";\nexport function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen);\n    const block1 = new Uint8Array(salt.length + 4);\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n    let r;\n    let T;\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(hashAlgorithm, password, block1));\n        if (!hLen) {\n            hLen = U.length;\n            T = new Uint8Array(hLen);\n            l = Math.ceil(keylen / hLen);\n            r = keylen - (l - 1) * hLen;\n        }\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++)\n                T[k] ^= U[k];\n        }\n        const destPos = (i - 1) * hLen;\n        const len = (i === l ? r : hLen);\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n    return hexlify(DK);\n}\n","\"use strict\";\n// This gets overridden by rollup\nconst exportWordlist = false;\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\nexport class Wordlist {\n    constructor(locale) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n    static check(wordlist) {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n    static register(lang, name) {\n        if (!name) {\n            name = lang.locale;\n        }\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = window;\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                        defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            }\n            catch (error) { }\n        }\n    }\n}\n","export const version = \"wordlists/5.5.0\";\n","\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langEn = new LangEn();\nWordlist.register(langEn);\nexport { langEn };\n","\"use strict\";\nimport { langEn as en } from \"./lang-en\";\nexport const wordlists = {\n    en: en\n};\n","\"use strict\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { wordlists } from \"@ethersproject/wordlists\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\nconst HardenedBit = 0x80000000;\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits);\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return (1 << bits) - 1;\n}\nfunction bytes32(value) {\n    return hexZeroPad(hexlify(value), 32);\n}\nfunction base58check(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nfunction getWordlist(wordlist) {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n    if (typeof (wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n    return wordlist;\n}\nconst _constructorGuard = {};\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n;\nexport class HDNode {\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n        logger.checkNew(new.target, HDNode);\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        }\n        else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        defineReadOnly(this, \"chainCode\", chainCode);\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n        }\n        else if (typeof (mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n        }\n        else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        if (this.depth >= 256) {\n            throw new Error(\"Depth too large!\");\n        }\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\" : \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([\"0x00\", this.privateKey]) : this.publicKey),\n        ]));\n    }\n    neuter() {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n    _derive(index) {\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n        }\n        const data = new Uint8Array(37);\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n            // Hardened path\n            if (path) {\n                path += \"'\";\n            }\n        }\n        else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) {\n            data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        // The private key\n        let ki = null;\n        // The public key\n        let Ki = null;\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        }\n        else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n        let mnemonicOrPath = path;\n        const srcMnemonic = this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n    derivePath(path) {\n        const components = path.split(\"/\");\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n        if (components[0] === \"m\") {\n            components.shift();\n        }\n        let result = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(HardenedBit + index);\n            }\n            else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(index);\n            }\n            else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n        return result;\n    }\n    static _fromSeed(seed, mnemonic) {\n        const seedArray = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) {\n            throw new Error(\"invalid seed\");\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n    static fromMnemonic(mnemonic, password, wordlist) {\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n    static fromSeed(seed) {\n        return HDNode._fromSeed(seed, null);\n    }\n    static fromExtendedKey(extendedKey) {\n        const bytes = Base58.decode(extendedKey);\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\nexport function mnemonicToSeed(mnemonic, password) {\n    if (!password) {\n        password = \"\";\n    }\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\nexport function mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = getWordlist(wordlist);\n    logger.checkNormalize();\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) {\n        throw new Error(\"invalid mnemonic\");\n    }\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) {\n            throw new Error(\"invalid mnemonic\");\n        }\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = 32 * words.length / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\nexport function entropyToMnemonic(entropy, wordlist) {\n    wordlist = getWordlist(wordlist);\n    entropy = arrayify(entropy);\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nexport function isValidMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getAccountPath(index) {\n    if (typeof (index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${index}'/0/0`;\n}\n","export const version = \"hdnode/5.5.0\";\n","export const version = \"random/5.5.1\";\n","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n}\n;\nconst anyGlobal = getGlobal();\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nexport function randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n}\n;\n","export const version = \"json-wallets/5.5.0\";\n","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\nexport function looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\nexport function zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexport function getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\nexport function searchPath(object, path) {\n    let currentChild = object;\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes) {\n    const bytes = arrayify(randomBytes);\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n","\"use strict\";\nimport aes from \"aes-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\nexport class CrowdsaleAccount extends Description {\n    isCrowdsaleAccount(value) {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json, password) {\n    const data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    const seedHexBytes = toUtf8Bytes(seedHex);\n    const privateKey = keccak256(seedHexBytes);\n    return new CrowdsaleAccount({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexport function isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nexport function getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Exported Types\nfunction hasMnemonic(value) {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\nexport class KeystoreAccount extends Description {\n    isKeystoreAccount(value) {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\nfunction _decrypt(data, key, ciphertext) {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n    return null;\n}\nfunction _getAccount(data, key) {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n    const mnemonicKey = key.slice(32, 64);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n        }\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n    const account = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n            account.mnemonic = node.mnemonic;\n        }\n        catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n    return new KeystoreAccount(account);\n}\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n    const passwordBytes = getPassword(password);\n    const kdf = searchPath(data, \"crypto/kdf\");\n    if (kdf && typeof (kdf) === \"string\") {\n        const throwError = function (name, value) {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        };\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n            // Check for all required parameters\n            if (!N || !r || !p) {\n                throwError(\"kdf\", kdf);\n            }\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) {\n                throwError(\"N\", N);\n            }\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            let prfFunc = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            }\n            else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            }\n            else {\n                throwError(\"prf\", prf);\n            }\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\nexport function decryptSync(json, password) {\n    const data = JSON.parse(json);\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\nexport function decrypt(json, password, progressCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const data = JSON.parse(json);\n        const key = yield _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n        return _getAccount(data, key);\n    });\n}\nexport function encrypt(account, password, options, progressCallback) {\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // The options are optional, so adjust the call as needed\n    if (typeof (options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    const privateKey = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n    let entropy = null;\n    let path = null;\n    let locale = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n    let client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    let salt = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    }\n    else {\n        salt = randomBytes(32);\n        ;\n    }\n    // Override initialization vector\n    let iv = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) {\n            throw new Error(\"invalid iv\");\n        }\n    }\n    else {\n        iv = randomBytes(16);\n    }\n    // Override the uuid\n    let uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error(\"invalid uuid\");\n        }\n    }\n    else {\n        uuidRandom = randomBytes(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]));\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            Crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                zpad(now.getUTCDate(), 2) + \"T\" +\n                zpad(now.getUTCHours(), 2) + \"-\" +\n                zpad(now.getUTCMinutes(), 2) + \"-\" +\n                zpad(now.getUTCSeconds(), 2) + \".0Z\");\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n        return JSON.stringify(data);\n    });\n}\n","\"use strict\";\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore } from \"./keystore\";\nfunction decryptJsonWallet(json, password, progressCallback) {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        const account = decryptCrowdsale(json, password);\n        if (progressCallback) {\n            progressCallback(1);\n        }\n        return Promise.resolve(account);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nfunction decryptJsonWalletSync(json, password) {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n    throw new Error(\"invalid JSON wallet\");\n}\nexport { decryptCrowdsale, decryptKeystore, decryptKeystoreSync, encryptKeystore, isCrowdsaleWallet, isKeystoreWallet, getJsonWalletAddress, decryptJsonWallet, decryptJsonWalletSync, };\n","export const version = \"wallet/5.5.0\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { arrayify, concat, hexDataSlice, isHexString, joinSignature } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction isAccount(value) {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\nfunction hasMnemonic(value) {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\nexport class Wallet extends Signer {\n    constructor(privateKey, provider) {\n        logger.checkNew(new.target, Wallet);\n        super();\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => ({\n                    phrase: srcMnemonic.phrase,\n                    path: srcMnemonic.path || defaultPath,\n                    locale: srcMnemonic.locale || \"en\"\n                }));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            }\n            else {\n                defineReadOnly(this, \"_mnemonic\", () => null);\n            }\n        }\n        else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => privateKey);\n            }\n            else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof (privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n            defineReadOnly(this, \"_mnemonic\", () => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    get mnemonic() { return this._mnemonic(); }\n    get privateKey() { return this._signingKey().privateKey; }\n    get publicKey() { return this._signingKey().publicKey; }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    connect(provider) {\n        return new Wallet(this, provider);\n    }\n    signTransaction(transaction) {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n            const signature = this._signingKey().signDigest(keccak256(serialize(tx)));\n            return serialize(tx, signature);\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                if (this.provider == null) {\n                    logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"resolveName\",\n                        value: name\n                    });\n                }\n                return this.provider.resolveName(name);\n            });\n            return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n        });\n    }\n    encrypt(password, options, progressCallback) {\n        if (typeof (options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n        if (progressCallback && typeof (progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n        if (!options) {\n            options = {};\n        }\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options) {\n        let entropy = randomBytes(16);\n        if (!options) {\n            options = {};\n        }\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));\n        }\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n    static fromEncryptedJson(json, password, progressCallback) {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n    static fromEncryptedJsonSync(json, password) {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n    static fromMnemonic(mnemonic, path, wordlist) {\n        if (!path) {\n            path = defaultPath;\n        }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\nexport function verifyMessage(message, signature) {\n    return recoverAddress(hashMessage(message), signature);\n}\nexport function verifyTypedData(domain, types, value, signature) {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n","export const version = \"experimental/5.5.0\";\n","\"use strict\";\nimport { ethers } from \"ethers\";\nimport scrypt from \"scrypt-js\";\nimport { version } from \"./_version\";\nconst logger = new ethers.utils.Logger(version);\nlet warned = false;\nexport class BrainWallet extends ethers.Wallet {\n    static _generate(username, password, legacy, progressCallback) {\n        if (!warned) {\n            logger.warn(\"Warning: using Brain Wallets should be considered insecure (this warning will not be repeated)\");\n            warned = true;\n        }\n        let usernameBytes = null;\n        let passwordBytes = null;\n        if (typeof (username) === 'string') {\n            logger.checkNormalize();\n            usernameBytes = ethers.utils.toUtf8Bytes(username.normalize('NFKC'));\n        }\n        else {\n            usernameBytes = ethers.utils.arrayify(username);\n        }\n        if (typeof (password) === 'string') {\n            logger.checkNormalize();\n            passwordBytes = ethers.utils.toUtf8Bytes(password.normalize('NFKC'));\n        }\n        else {\n            passwordBytes = ethers.utils.arrayify(password);\n        }\n        return scrypt.scrypt(passwordBytes, usernameBytes, (1 << 18), 8, 1, 32, progressCallback).then((key) => {\n            if (legacy) {\n                return new BrainWallet(key);\n            }\n            const mnemonic = ethers.utils.entropyToMnemonic(ethers.utils.arrayify(key).slice(0, 16));\n            return new BrainWallet(ethers.Wallet.fromMnemonic(mnemonic));\n        });\n    }\n    static generate(username, password, progressCallback) {\n        return BrainWallet._generate(username, password, false, progressCallback);\n    }\n    static generateLegacy(username, password, progressCallback) {\n        return BrainWallet._generate(username, password, true, progressCallback);\n    }\n}\n","\"use strict\";\nimport { ethers } from \"ethers\";\nimport { version } from \"./_version\";\nconst logger = new ethers.utils.Logger(version);\n// @TODO: Keep a per-NonceManager pool of sent but unmined transactions for\n//        rebroadcasting, in case we overrun the transaction pool\nexport class NonceManager extends ethers.Signer {\n    constructor(signer) {\n        logger.checkNew(new.target, NonceManager);\n        super();\n        this._deltaCount = 0;\n        ethers.utils.defineReadOnly(this, \"signer\", signer);\n        ethers.utils.defineReadOnly(this, \"provider\", signer.provider || null);\n    }\n    connect(provider) {\n        return new NonceManager(this.signer.connect(provider));\n    }\n    getAddress() {\n        return this.signer.getAddress();\n    }\n    getTransactionCount(blockTag) {\n        if (blockTag === \"pending\") {\n            if (!this._initialPromise) {\n                this._initialPromise = this.signer.getTransactionCount(\"pending\");\n            }\n            const deltaCount = this._deltaCount;\n            return this._initialPromise.then((initial) => (initial + deltaCount));\n        }\n        return this.signer.getTransactionCount(blockTag);\n    }\n    setTransactionCount(transactionCount) {\n        this._initialPromise = Promise.resolve(transactionCount).then((nonce) => {\n            return ethers.BigNumber.from(nonce).toNumber();\n        });\n        this._deltaCount = 0;\n    }\n    incrementTransactionCount(count) {\n        this._deltaCount += (count ? count : 1);\n    }\n    signMessage(message) {\n        return this.signer.signMessage(message);\n        ;\n    }\n    signTransaction(transaction) {\n        return this.signer.signTransaction(transaction);\n    }\n    sendTransaction(transaction) {\n        if (transaction.nonce == null) {\n            transaction = ethers.utils.shallowCopy(transaction);\n            transaction.nonce = this.getTransactionCount(\"pending\");\n            this.incrementTransactionCount();\n        }\n        else {\n            this.setTransactionCount(transaction.nonce);\n        }\n        return this.signer.sendTransaction(transaction).then((tx) => {\n            return tx;\n        });\n    }\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport EventEmitter from \"events\";\nimport { ethers } from \"ethers\";\nimport { version } from \"./_version\";\nconst logger = new ethers.utils.Logger(version);\n/*\nfunction getBlockTag(tag) {\n    if (tag == null) { return \"latest\"; }\n    if (tag === \"earliest\" || tag === \"latest\" || tag === \"pending\") {\n        return tag;\n    }\n    return ethers.utils.hexValue(tag)\n}\n*/\nexport class Eip1193Bridge extends EventEmitter {\n    constructor(signer, provider) {\n        super();\n        ethers.utils.defineReadOnly(this, \"signer\", signer);\n        ethers.utils.defineReadOnly(this, \"provider\", provider || null);\n    }\n    request(request) {\n        return this.send(request.method, request.params || []);\n    }\n    send(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            function throwUnsupported(message) {\n                return logger.throwError(message, ethers.utils.Logger.errors.UNSUPPORTED_OPERATION, {\n                    method: method,\n                    params: params\n                });\n            }\n            let coerce = (value) => value;\n            switch (method) {\n                case \"eth_gasPrice\": {\n                    const result = yield this.provider.getGasPrice();\n                    return result.toHexString();\n                }\n                case \"eth_accounts\": {\n                    const result = [];\n                    if (this.signer) {\n                        const address = yield this.signer.getAddress();\n                        result.push(address);\n                    }\n                    return result;\n                }\n                case \"eth_blockNumber\": {\n                    return yield this.provider.getBlockNumber();\n                }\n                case \"eth_chainId\": {\n                    const result = yield this.provider.getNetwork();\n                    return result.chainId;\n                }\n                case \"eth_getBalance\": {\n                    const result = yield this.provider.getBalance(params[0], params[1]);\n                    return result.toHexString();\n                }\n                case \"eth_getStorageAt\": {\n                    return this.provider.getStorageAt(params[0], params[1], params[2]);\n                }\n                case \"eth_getTransactionCount\": {\n                    const result = yield this.provider.getTransactionCount(params[0], params[1]);\n                    return ethers.utils.hexValue(result);\n                }\n                case \"eth_getBlockTransactionCountByHash\":\n                case \"eth_getBlockTransactionCountByNumber\": {\n                    const result = yield this.provider.getBlock(params[0]);\n                    return ethers.utils.hexValue(result.transactions.length);\n                }\n                case \"eth_getCode\": {\n                    const result = yield this.provider.getBlock(params[0]);\n                    return result;\n                }\n                case \"eth_sendRawTransaction\": {\n                    return yield this.provider.sendTransaction(params[0]);\n                }\n                case \"eth_call\": {\n                    const req = ethers.providers.JsonRpcProvider.hexlifyTransaction(params[0]);\n                    return yield this.provider.call(req, params[1]);\n                }\n                case \"estimateGas\": {\n                    if (params[1] && params[1] !== \"latest\") {\n                        throwUnsupported(\"estimateGas does not support blockTag\");\n                    }\n                    const req = ethers.providers.JsonRpcProvider.hexlifyTransaction(params[0]);\n                    const result = yield this.provider.estimateGas(req);\n                    return result.toHexString();\n                }\n                // @TODO: Transform? No uncles?\n                case \"eth_getBlockByHash\":\n                case \"eth_getBlockByNumber\": {\n                    if (params[1]) {\n                        return yield this.provider.getBlockWithTransactions(params[0]);\n                    }\n                    else {\n                        return yield this.provider.getBlock(params[0]);\n                    }\n                }\n                case \"eth_getTransactionByHash\": {\n                    return yield this.provider.getTransaction(params[0]);\n                }\n                case \"eth_getTransactionReceipt\": {\n                    return yield this.provider.getTransactionReceipt(params[0]);\n                }\n                case \"eth_sign\": {\n                    if (!this.signer) {\n                        return throwUnsupported(\"eth_sign requires an account\");\n                    }\n                    const address = yield this.signer.getAddress();\n                    if (address !== ethers.utils.getAddress(params[0])) {\n                        logger.throwArgumentError(\"account mismatch or account not found\", \"params[0]\", params[0]);\n                    }\n                    return this.signer.signMessage(ethers.utils.arrayify(params[1]));\n                }\n                case \"eth_sendTransaction\": {\n                    if (!this.signer) {\n                        return throwUnsupported(\"eth_sendTransaction requires an account\");\n                    }\n                    const req = ethers.providers.JsonRpcProvider.hexlifyTransaction(params[0]);\n                    const tx = yield this.signer.sendTransaction(req);\n                    return tx.hash;\n                }\n                case \"eth_getUncleCountByBlockHash\":\n                case \"eth_getUncleCountByBlockNumber\":\n                    {\n                        coerce = ethers.utils.hexValue;\n                        break;\n                    }\n                case \"eth_getTransactionByBlockHashAndIndex\":\n                case \"eth_getTransactionByBlockNumberAndIndex\":\n                case \"eth_getUncleByBlockHashAndIndex\":\n                case \"eth_getUncleByBlockNumberAndIndex\":\n                case \"eth_newFilter\":\n                case \"eth_newBlockFilter\":\n                case \"eth_newPendingTransactionFilter\":\n                case \"eth_uninstallFilter\":\n                case \"eth_getFilterChanges\":\n                case \"eth_getFilterLogs\":\n                case \"eth_getLogs\":\n                    break;\n            }\n            // If our provider supports send, maybe it can do a better job?\n            if ((this.provider).send) {\n                const result = yield (this.provider).send(method, params);\n                return coerce(result);\n            }\n            return throwUnsupported(`unsupported method: ${method}`);\n        });\n    }\n}\n","\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","\"use strict\";\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r)\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        }\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(lib);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = lib;\n    }\n\n})(this);\n"],"names":["hashMessage","message","toUtf8Bytes","keccak256","concat","String","length","pbkdf2","password","salt","iterations","keylen","hashAlgorithm","hLen","arrayify","r","T","l","DK","Uint8Array","block1","set","i","U","computeHmac","Math","ceil","j","k","destPos","len","slice","hexlify","logger","Logger","Wordlist","locale","checkAbstract","defineReadOnly","this","mnemonic","toLowerCase","split","words","join","wordlist","word","getWord","getWordIndex","push","id","lang","name","loadWords","replace","substring","check","Error","langEn","LangEn","index","indexOf","register","wordlists","en","N","BigNumber","MasterSecret","HardenedBit","getUpperMask","bits","bytes32","value","hexZeroPad","base58check","data","Base58","hexDataSlice","sha256","getWordlist","throwArgumentError","_constructorGuard","defaultPath","HDNode","constructorGuard","privateKey","publicKey","parentFingerprint","chainCode","depth","mnemonicOrPath","checkNew","signingKey","SigningKey","compressedPublicKey","ripemd160","computeAddress","path","I","SupportedAlgorithm","IL","IR","ki","Ki","add","mod","_addPoint","srcMnemonic","Object","freeze","phrase","fingerprint","components","shift","result","component","match","parseInt","_derive","seed","seedArray","entropyToMnemonic","mnemonicToEntropy","_fromSeed","UnicodeNormalizationForm","mnemonicToSeed","extendedKey","bytes","key","checkNormalize","entropy","offset","normalize","bit","entropyBits","checksumMask","indices","remainingBits","checksumBits","checksum","map","anyGlobal","self","window","global","getGlobal","crypto","msCrypto","randomBytes","getRandomValues","warn","buffer","throwError","operation","version","looseArrayify","hexString","zpad","getPassword","searchPath","object","currentChild","comps","matchingChild","uuidV4","CrowdsaleAccount","_isCrowdsaleAccount","Description","decrypt","json","JSON","parse","ethaddr","getAddress","encseed","iv","encryptedSeed","aesCbc","aes","seedHex","fromCharCode","seedHexBytes","address","isCrowdsaleWallet","error","isKeystoreWallet","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","done","then","apply","hasMnemonic","KeystoreAccount","_isKeystoreAccount","_getAccount","ciphertext","counter","aesCtr","_decrypt","mnemonicKey","account","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","node","fromMnemonic","derivePath","code","argument","pbkdf2Sync","passwordBytes","count","dkLen","prfFunc","_pbkdf2","_computeKdfKey","pbkdf2Func","scryptFunc","progressCallback","kdf","p","prf","decryptJsonWallet","decryptCrowdsale","scrypt","decryptKeystore","decryptJsonWalletSync","decryptKeystoreSync","Wallet","provider","isHexString","curve","Provider","_mnemonic","_signingKey","transaction","resolveProperties","tx","from","signature","signDigest","serialize","joinSignature","domain","types","_TypedDataEncoder","resolveName","populated","options","client","uuidRandom","uuid","derivedKey","macPrefix","encrypt","mac","Crypto","cipher","cipherparams","kdfparams","n","dklen","now","Date","timestamp","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","stringify","encryptKeystore","extraEntropy","Signer","ethers","warned","BrainWallet","username","legacy","usernameBytes","_generate","NonceManager","signer","_deltaCount","connect","blockTag","_initialPromise","getTransactionCount","deltaCount","initial","transactionCount","nonce","toNumber","signMessage","signTransaction","incrementTransactionCount","setTransactionCount","sendTransaction","Eip1193Bridge","request","send","method","params","throwUnsupported","coerce","getGasPrice","toHexString","getBlockNumber","getNetwork","chainId","getBalance","getStorageAt","getBlock","transactions","req","call","estimateGas","getBlockWithTransactions","getTransaction","getTransactionReceipt","hash","EventEmitter","root","checkInt","checkInts","arrayish","coerceArray","arg","copy","ArrayBuffer","isView","Array","prototype","isArray","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","convertUtf8","toBytes","text","encodeURI","c","charCodeAt","substr","fromBytes","convertHex","Hex","v","numberOfRounds","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","defineProperty","_prepare","rounds","_Ke","_Kd","roundKeyCount","KC","tk","tt","rconpointer","t","plaintext","a","ModeOfOperationECB","description","_aes","block","ModeOfOperationCBC","_lastCipherblock","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","increment","ModeOfOperationCTR","_remainingCounter","_remainingCounterIndex","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utils","hex","utf8","padding","pkcs7","pad","padder","strip","_arrayTest","module","exports","ReflectOwnKeys","R","Reflect","ReflectApply","target","receiver","args","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","Number","isNaN","init","once","emitter","errorListener","err","removeListener","resolver","arguments","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","warning","create","newListener","emit","unshift","w","console","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","addEventListener","wrapListener","removeEventListener","enumerable","get","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","context","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","pop","spliceOne","off","removeAllListeners","keys","rawListeners","eventNames","MAX_VALUE","SHA256","K","Uint32Array","h0","h1","h2","h3","h4","h5","h6","h7","blocks","b","d","f","g","h","u","t1","t2","bytesLeft","bitLenHi","bitLenLo","numZeros","PBKDF2_HMAC_SHA256_OneIter","innerLen","inner","outerKey","dk","incrementCounter","blockmix_salsa8","BY","Yi","x","_X","arraycopy","blockxor","salsa20_8","B","D","src","srcPos","dest","checkBufferish","o","ensureInteger","_scrypt","callback","i1","Bi","XY","V","totalOps","currentOp","lastPercent10","stop","i0","limit","nextTick","setImmediate","setTimeout","incrementalSMix","steps","percent10","lib","lastProgress","progress","syncScrypt"],"sourceRoot":""}